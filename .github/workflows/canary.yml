name: Canary

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  read_direct_dependents:
    name: Read list of direct dependents
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: echo "matrix=$(cat dependents-data/dependents.json | jq -c '.direct')" >> $GITHUB_OUTPUT
  test_direct_dependents:
    needs: read_direct_dependents
    name: Test ${{ matrix.project }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node_version: [lts/*]
        project: ${{ fromJson(needs.read_direct_dependents.outputs.matrix) }}
    steps:
      - name: Checkout main project
        uses: actions/checkout@v4
        with:
          path: main

      - name: Checkout ${{ matrix.project }}
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.project }}
          path: project

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: Determine npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('main/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install main
        run: 'npm ci --ignore-scripts --force'
        working-directory: ./main
      - name: install project
        run: '[ -f package-lock.json ] && npm ci --ignore-scripts --force || npm install --ignore-scripts --force'
        working-directory: ./project

      - name: modify project eslint config
        run: sed "s/'neostandard'/'..\/main\/index.js'/" eslint.config.js > tmp.eslint.config.js && rm eslint.config.js && mv tmp.eslint.config.js eslint.config.js
        working-directory: ./project

      - name: run eslint
        run: ../main/node_modules/.bin/eslint
        working-directory: ./project

  read_indirect_dependents:
    name: Read list of indirect dependents
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: echo "matrix=$(cat dependents-data/dependents.json | jq -c '.indirect')" >> $GITHUB_OUTPUT
  test_indirect_dependents:
    needs: read_indirect_dependents
    name: Test ${{ matrix.project }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node_version: [lts/*]
        project: ${{ fromJson(needs.read_indirect_dependents.outputs.matrix) }}
    steps:
      - name: Checkout main project
        uses: actions/checkout@v4
        with:
          path: main

      - name: Checkout ${{ matrix.project }}
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.project }}
          path: project

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: modify project neostandard version
        run: "jq '. + { override: (.override + {neostandard: \"file:../main\"}) }' package.json"

      - name: install project
        run: 'npm install --ignore-scripts --force'
        working-directory: ./project

      - name: run eslint
        run: npx eslint
        working-directory: ./project
